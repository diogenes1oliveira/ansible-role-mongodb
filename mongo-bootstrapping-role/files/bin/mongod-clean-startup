#!/bin/bash

set -eo pipefail

PROGRAM_NAME="$0"

usage() {
  cat <<EOF
Starts up the mongod service and wait for it to actually be up.

The TCP port is loaded from the file /etc/mongod.current.conf or the one
specified via the command line option -c.

Usage:
  $PROGRAM_NAME [-q] [-d] [-r=<n>] [-i=<seconds>] [-c=<file>]

Parameters:
  -q, --quiet         quiet mode
  -d, --dry-run       takes no action, only shows the commands that would
                      be executed
  -i, --interval      seconds to wait between retries (default: 2)
  -r, --retries       max number of retries (default: 3)
  -c, --config-file   path to the config file of the mongod server to be started
                      up (default: /etc/mongod.current.conf)
EOF
}

show-info() {
    if [[ "$VERBOSE" == true ]]; then
        echo '===== ' "$@" ' ===='
    fi
}

VERBOSE=true
DRY_RUN_PREFIX=''
INTERVAL=1
MAX_RETRIES=3
CONFIG_FILE=/etc/mongod.current.conf

main() {
    if [[ "$VERBOSE" == true ]]; then
        VERBOSE_FLAG='--verbose'
        QUIET_FLAG=''
    else
        VERBOSE_FLAG=''
        QUIET_FLAG='--quiet'
    fi

    show-info 'Starting the mongod service'
    $DRY_RUN_PREFIX systemctl start mongod

    get-port

    wait-for-up
}

get-port() {
    if [[ -n "$DRY_RUN_PREFIX" ]]; then
        PORT=''
        echo 'PORT=$(cat' "$CONFIG_FILE" '|' yq -r '.net.port)'
    else
        i=1
        while [[ ! -f "$CONFIG_FILE" ]]; do
            i=$((i+1))

            if [[ "$i" -gt "$MAX_RETRIES" ]]; then
                echo "Max number of retries ($MAX_RETRIES) reached" >&2
                exit 1
            fi

            show-info "Couldn't find the config file. Retry #$i in $INTERVAL seconds..."
            sleep "$INTERVAL"
        done
        PORT=$(cat "$CONFIG_FILE" | yq -r '.net.port')
    fi
}

mongo-check() {
    show-info "Checking if mongod is up and listening on the port $PORT"
    $DRY_RUN_PREFIX mongo --port "$PORT" --eval 'quit()'
}

wait-for-up() {
    show-info 'Waiting for mongod to be up and about'
    sleep "$INTERVAL"

    i=1
    while ! mongo-check; do
        i=$((i+1))

        if [[ "$i" -gt "$MAX_RETRIES" ]]; then
            echo "Max number of retries ($MAX_RETRIES) reached" >&2
            exit 1
        fi

        show-info "Couldn't connect. Retry #$i in $INTERVAL seconds..."
        sleep "$INTERVAL"
    done

    show-info 'Mongod started successfully'
}

OPTS=$(getopt \
    -o hqdr:i:c: \
    --long help,quiet,dry-run,retries:,interval:,config-file: \
    -- "$@")

if [[ "$?" != 0 ]]; then
    echo "Failed to parse args." >&2
    usage >&2
    exit 1
fi

eval set -- "$OPTS"

while true; do
    case "$1" in
        -h|--help )
            usage
            exit 0 ;;
        -q|--quiet )
            VERBOSE=false
            ;;
        -d|--dry-run )
            DRY_RUN_PREFIX=echo
            ;;
        -i|--interval )
            shift
            INTERVAL="$1"
            ;;
        -r|--retries )
            shift
            MAX_RETRIES="$1"
            ;;
        -c|--config-file )
            shift
            CONFIG_FILE="$1"
            ;;
        --)
            shift
            break ;;
    esac
    shift
done

main
